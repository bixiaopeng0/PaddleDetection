input_height: &input_height 1280
input_width: &input_width 1280
input_size: &input_size [*input_height, *input_width]
mosaic_epoch: &mosaic_epoch 300

worker_num: 4
TrainReader:
  sample_transforms:
    - DecodeNormResize:
        target_size: *input_size
        keep_ratio: True
    - BboxPixelXYXY2NormCXCYWH: {}
    - MosaicPerspective: {mosaic_prob: 1.0, target_size: 1280} # x y w h
    #- LetterBox: {target_size: *input_size, auto: False, scaleup: False}
    #- Albumentations: {}
    - RandomHSV: {hgain: 0.015, sgain: 0.7, vgain: 0.4}
    - RandomFlip: {}
    - BboxXYXY2XYWH: {}
    - NormalizeBox: {}
    - NormalizeImage: {mean: [0, 0, 0], std: [1, 1, 1], is_scale: True}
    - RGBReverse: {}
    - Permute: {}
  batch_size: 8
  shuffle: True
  drop_last: True
  collate_batch: False
  mosaic_epoch: *mosaic_epoch


EvalReader:
  sample_transforms:
    - Decode: {}
    - Resize: {target_size: *input_size, keep_ratio: True}
    - Pad: {size: *input_size, fill_value: [114., 114., 114.]}
    - NormalizeImage: {mean: [0, 0, 0], std: [1, 1, 1], is_scale: True}
    - Permute: {}
  batch_size: 8


TestReader:
  inputs_def:
    image_shape: [3, 1280, 1280]
  sample_transforms:
    - Decode: {}
    - Resize: {target_size: *input_size, keep_ratio: True}
    - Pad: {size: *input_size, fill_value: [114., 114., 114.]}
    - NormalizeImage: {mean: [0, 0, 0], std: [1, 1, 1], is_scale: True}
    - Permute: {}
  batch_size: 1
  fuse_normalize: True
