worker_num: 2
TrainReader:
  inputs_def:
    num_max_boxes: 50
  sample_transforms:
    - Decode: {}
    - RGBReverse: {}
    #- Mosaic: {target_size: 640, mosaic_border: [-320, -320]} #  # x y w h
    - BboxPixelXYXY2NormCXCYWH: {}
    - LetterBox: {target_size: 640, auto: False, scaleup: False}
    #- RandomPerspective: {degree: 0, translate: 0.1, scale: 0.5, shear: 0.0, perspective: 0.0, border: [-320, -320]} # x y w h
    #- RandomHSV: {hgain: 0.015, sgain: 0.7, vgain: 0.4}
    #- RandomFlip: {}
    - BboxXYXY2XYWH: {}
    - NormalizeBox: {}
    - NormalizeImage: {mean: [0, 0, 0], std: [1, 1, 1], is_scale: True}
    - RGBReverse: {}
    - Permute: {}
  batch_transforms:
    - Gt2Yolov5Target: 
        anchor_masks: [[0, 1, 2], [3, 4, 5], [6, 7, 8]]
        anchors: [[10, 13], [16, 30], [33, 23],
                  [30, 61], [62, 45], [59, 119],
                  [116, 90], [156, 198], [373, 326]]
        downsample_ratios: [8, 16, 32]
  batch_size: 8
  shuffle: True
  drop_last: True
  use_shared_memory: True
  collate_batch: True # False TODO
  mosaic_epoch: 10000


EvalReader:
  sample_transforms:
    - Decode: {}
    - LetterBox: {target_size: 640, auto: True, scaleup: True}
    - NormalizeImage: {mean: [0, 0, 0], std: [1, 1, 1], is_scale: True}
    - Permute: {}
  batch_size: 1


TestReader:
  inputs_def:
    image_shape: [3, 640, 640]
  sample_transforms:
    - Decode: {}
    - LetterBox: {target_size: [640, 640], auto: False, scaleup: False}
    - NormalizeImage: {mean: [0, 0, 0], std: [1, 1, 1], is_scale: True}
    - Permute: {}
  batch_size: 1
